{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/mcginty/src/TreeView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeNode({\n  node,\n  path,\n  onFocus,\n  expandedPaths,\n  toggleExpand\n}) {\n  const hasChildren = node.children && node.children.length > 0;\n  const isExpanded = expandedPaths.has(path);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"1em\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [hasChildren && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleExpand(path),\n        style: {\n          marginRight: \"0.5em\"\n        },\n        children: isExpanded ? \"−\" : \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          cursor: \"pointer\",\n          fontWeight: \"bold\"\n        },\n        onClick: () => onFocus(node),\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), hasChildren && isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: node.children.map((child, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child,\n        path: `${path}-${index}`,\n        onFocus: onFocus,\n        expandedPaths: expandedPaths,\n        toggleExpand: toggleExpand\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n// Helper to collect all node paths\n_c = TreeNode;\nfunction getAllPaths(node, path = \"0\") {\n  let paths = [path];\n  if (node.children) {\n    node.children.forEach((child, index) => {\n      const childPath = `${path}-${index}`;\n      paths = paths.concat(getAllPaths(child, childPath));\n    });\n  }\n  return paths;\n}\nfunction TreeView({\n  data,\n  focusedNode,\n  onFocus\n}) {\n  _s();\n  const [expandedPaths, setExpandedPaths] = useState(new Set());\n  useEffect(() => {\n    if (data) {\n      const allPaths = getAllPaths(data);\n      setExpandedPaths(new Set(allPaths));\n    }\n  }, [data]);\n  const toggleExpand = path => {\n    setExpandedPaths(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(path)) {\n        newSet.delete(path);\n      } else {\n        newSet.add(path);\n      }\n      return newSet;\n    });\n  };\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading tree...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-view\",\n    style: {\n      padding: \"1em\",\n      overflowY: \"auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(TreeNode, {\n      node: data,\n      path: \"0\",\n      onFocus: onFocus,\n      expandedPaths: expandedPaths,\n      toggleExpand: toggleExpand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeView, \"bmBunDzBbk7y9NEVb6QNRmlVaM8=\");\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TreeNode","node","path","onFocus","expandedPaths","toggleExpand","hasChildren","children","length","isExpanded","has","style","marginLeft","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","cursor","fontWeight","name","map","child","index","_c","getAllPaths","paths","forEach","childPath","concat","TreeView","data","focusedNode","_s","setExpandedPaths","Set","allPaths","prev","newSet","delete","add","className","padding","overflowY","_c2","$RefreshReg$"],"sources":["/home/jbrannigan/src/mcginty/src/TreeView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction TreeNode({ node, path, onFocus, expandedPaths, toggleExpand }) {\n  const hasChildren = node.children && node.children.length > 0;\n  const isExpanded = expandedPaths.has(path);\n\n  return (\n    <div style={{ marginLeft: \"1em\" }}>\n      <div>\n        {hasChildren && (\n          <button\n            onClick={() => toggleExpand(path)}\n            style={{ marginRight: \"0.5em\" }}\n          >\n            {isExpanded ? \"−\" : \"+\"}\n          </button>\n        )}\n        <span\n          style={{ cursor: \"pointer\", fontWeight: \"bold\" }}\n          onClick={() => onFocus(node)}\n        >\n          {node.name}\n        </span>\n      </div>\n      {hasChildren && isExpanded && (\n        <div>\n          {node.children.map((child, index) => (\n            <TreeNode\n              key={index}\n              node={child}\n              path={`${path}-${index}`}\n              onFocus={onFocus}\n              expandedPaths={expandedPaths}\n              toggleExpand={toggleExpand}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Helper to collect all node paths\nfunction getAllPaths(node, path = \"0\") {\n  let paths = [path];\n  if (node.children) {\n    node.children.forEach((child, index) => {\n      const childPath = `${path}-${index}`;\n      paths = paths.concat(getAllPaths(child, childPath));\n    });\n  }\n  return paths;\n}\n\n\nfunction TreeView({ data, focusedNode, onFocus }) {\n  const [expandedPaths, setExpandedPaths] = useState(new Set());\n\n  useEffect(() => {\n    if (data) {\n      const allPaths = getAllPaths(data);\n      setExpandedPaths(new Set(allPaths));\n    }\n  }, [data]);\n\n  const toggleExpand = (path) => {\n    setExpandedPaths((prev) => {\n      const newSet = new Set(prev);\n      if (newSet.has(path)) {\n        newSet.delete(path);\n      } else {\n        newSet.add(path);\n      }\n      return newSet;\n    });\n  };\n\n  if (!data) return <div>Loading tree...</div>;\n\n  return (\n    <div className=\"tree-view\" style={{ padding: \"1em\", overflowY: \"auto\" }}>\n      <TreeNode\n        node={data}\n        path=\"0\"\n        onFocus={onFocus}\n        expandedPaths={expandedPaths}\n        toggleExpand={toggleExpand}\n      />\n    </div>\n  );\n}\n\nexport default TreeView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}